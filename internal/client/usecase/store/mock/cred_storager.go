// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ilya-rusyanov/gophkeeper/internal/client/usecase/store (interfaces: CredStorager)
//
// Generated by this command:
//
//	mockgen -destination ./mock/cred_storager.go -package mock . CredStorager
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	entity "github.com/ilya-rusyanov/gophkeeper/internal/client/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockCredStorager is a mock of CredStorager interface.
type MockCredStorager struct {
	ctrl     *gomock.Controller
	recorder *MockCredStoragerMockRecorder
}

// MockCredStoragerMockRecorder is the mock recorder for MockCredStorager.
type MockCredStoragerMockRecorder struct {
	mock *MockCredStorager
}

// NewMockCredStorager creates a new mock instance.
func NewMockCredStorager(ctrl *gomock.Controller) *MockCredStorager {
	mock := &MockCredStorager{ctrl: ctrl}
	mock.recorder = &MockCredStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCredStorager) EXPECT() *MockCredStoragerMockRecorder {
	return m.recorder
}

// Load mocks base method.
func (m *MockCredStorager) Load() (entity.MyCredentials, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(entity.MyCredentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Load indicates an expected call of Load.
func (mr *MockCredStoragerMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockCredStorager)(nil).Load))
}
