// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ilya-rusyanov/gophkeeper/internal/client/usecase/register (interfaces: CredentialsStorager)
//
// Generated by this command:
//
//	mockgen -package mock -destination ./mock/credentials_storager.go . CredentialsStorager
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	entity "github.com/ilya-rusyanov/gophkeeper/internal/client/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockCredentialsStorager is a mock of CredentialsStorager interface.
type MockCredentialsStorager struct {
	ctrl     *gomock.Controller
	recorder *MockCredentialsStoragerMockRecorder
}

// MockCredentialsStoragerMockRecorder is the mock recorder for MockCredentialsStorager.
type MockCredentialsStoragerMockRecorder struct {
	mock *MockCredentialsStorager
}

// NewMockCredentialsStorager creates a new mock instance.
func NewMockCredentialsStorager(ctrl *gomock.Controller) *MockCredentialsStorager {
	mock := &MockCredentialsStorager{ctrl: ctrl}
	mock.recorder = &MockCredentialsStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCredentialsStorager) EXPECT() *MockCredentialsStoragerMockRecorder {
	return m.recorder
}

// Store mocks base method.
func (m *MockCredentialsStorager) Store(arg0 entity.MyCredentials) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Store indicates an expected call of Store.
func (mr *MockCredentialsStoragerMockRecorder) Store(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockCredentialsStorager)(nil).Store), arg0)
}
