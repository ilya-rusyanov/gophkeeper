// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ilya-rusyanov/gophkeeper/internal/server/grpcservice (interfaces: IRegisterUC)
//
// Generated by this command:
//
//	mockgen -destination ./mock/iregisteruc.go -package mock . IRegisterUC
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/ilya-rusyanov/gophkeeper/internal/server/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockIRegisterUC is a mock of IRegisterUC interface.
type MockIRegisterUC struct {
	ctrl     *gomock.Controller
	recorder *MockIRegisterUCMockRecorder
}

// MockIRegisterUCMockRecorder is the mock recorder for MockIRegisterUC.
type MockIRegisterUCMockRecorder struct {
	mock *MockIRegisterUC
}

// NewMockIRegisterUC creates a new mock instance.
func NewMockIRegisterUC(ctrl *gomock.Controller) *MockIRegisterUC {
	mock := &MockIRegisterUC{ctrl: ctrl}
	mock.recorder = &MockIRegisterUCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRegisterUC) EXPECT() *MockIRegisterUCMockRecorder {
	return m.recorder
}

// Register mocks base method.
func (m *MockIRegisterUC) Register(arg0 context.Context, arg1 entity.UserCredentials) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockIRegisterUCMockRecorder) Register(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockIRegisterUC)(nil).Register), arg0, arg1)
}
